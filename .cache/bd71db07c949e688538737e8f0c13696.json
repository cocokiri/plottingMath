{"dependencies":[{"name":"/Users/markus/Documents/Coding/mathplotting/package.json","includedInParent":true,"mtime":1523958355000},{"name":"/Users/markus/Documents/Coding/mathplotting/node_modules/plot.js/package.json","includedInParent":true,"mtime":1523958354000},{"name":"../../lib/interpreter/token","loc":{"line":4,"column":20}}],"generated":{"js":"// grammar.js will take a list of tokens, and classify it as one of the\n// possible plot.js language constructs\n\nvar token = require('../../lib/interpreter/token');\n\n// Array Remove - By John Resig (MIT Licensed)\nArray.prototype.remove = function(from, to) {\n  var rest = this.slice((to || from) + 1 || this.length);\n  this.length = from < 0 ? this.length + from : from;\n  return this.push.apply(this, rest);\n};\n\nvar constructs = {\n    var_list: 100,\n    statement_list: 101,\n    statement: 102,\n    function_def: 103,\n    function_call: 104,\n};\n\nvar make_construct = function(type, tokens, pos) {\n    return {type: type, tokens: tokens, reference_pos: pos};\n};\n\nexports.type = constructs;\n\nvar var_list = function(token_list) {\n    for (var i = 0; i < token_list.length; i++) {\n        var tok = token_list[i];\n\n        if (i % 2 === 0) {\n            if (tok.type !== token.type.numeric &&\n                tok.type !== token.type.variable) {\n                if (i === 0) return false;\n                return make_construct(constructs.var_list, token_list.slice(0, i), i);\n            }\n        } else {\n            if (tok.type !== token.type.unaryOp ||\n                tok.value !== ',') {\n                if (i === 0) return false;\n                return make_construct(constructs.var_list, token_list.slice(0, i), i);\n            }\n        }\n    }\n\n    return make_construct(constructs.var_list, token_list, i);\n};\n\nexports.var_list = var_list;\n\nvar statement_list = function(token_list) {\n    var last_comma = 0;\n    var stmt_list = [];\n    for (var i = 0; i < token_list.length; i++) {\n        var tok = token_list[i];\n\n        if (tok.value === ',') {\n            var construct = statement(token_list.slice(last_comma, i));\n            if (!construct) return false;\n            last_comma = i + 1;\n            stmt_list.push(construct);\n        }\n    }\n\n    var stmt = statement(token_list.slice(last_comma, token_list.length));\n    if (!stmt) return false;\n    stmt_list.push(stmt);\n\n    return make_construct(constructs.statement_list, stmt_list, token_list.length);\n};\n\nexports.statement_list = statement_list;\n\nvar statement = function(token_list) {\n    if (token_list.length === 0) return make_construct(constructs.statement, [token.type.nil], 0);\n\n    if (token_list.length === 1) {\n        if (token_list[0].type === token.type.variable ||\n            token_list[0].type === token.type.numeric) {\n            return make_construct(constructs.statement, token_list, token_list.length + 1);\n        }\n    } else {\n        var construct = function_call(token_list);\n        var operator, left_hand, right_hand;\n\n        if (construct) {\n            operator = token_list[construct.reference_pos];\n            right_hand = token_list.slice(construct.reference_pos + 1);\n\n            if (operator === undefined || operator.type !== token.type.unaryOp) {\n                return make_construct(constructs.statement, [construct], construct.reference_pos);\n            } else if (right_hand === undefined) {\n                return false;\n            } else {\n                var stmt = statement(right_hand);\n\n                if (!stmt) return false;\n\n                stmt.tokens.unshift(operator);\n                stmt.tokens.unshift(construct);\n                stmt.reference_pos += construct.reference_pos + 1;\n\n                return stmt;\n            }\n        } else {\n            left_hand = token_list[0];\n            operator = token_list[1];\n            right_hand = token_list.slice(2);\n\n            if (left_hand.value === '(' ||\n                operator.value === ')') {\n                right_hand.unshift(operator);\n\n                construct = statement(right_hand);\n\n                if (!construct) return false;\n\n                construct.tokens.unshift(left_hand);\n                construct.reference_pos += 1;\n\n                return construct;\n            } else if (operator.type !== token.type.unaryOp &&\n                operator.type !== token.type.binaryOp) {\n\n                return make_construct(constructs.statement, [left_hand], 1);\n            } else if (operator.value === ',' && right_hand[0].type === token.type.newline) {\n                var nl = right_hand[0];\n                right_hand.remove(0);\n\n                construct = statement(right_hand);\n\n                construct.tokens.unshift(nl);\n                construct.tokens.unshift(left_hand);\n                construct.reference_pos += 3;\n\n                return construct;\n            } else if (right_hand === undefined) {\n                return false;\n            } else {\n                construct = statement(right_hand);\n\n                if (!construct) return false;\n\n                construct.tokens.unshift(operator);\n                construct.tokens.unshift(left_hand);\n                construct.reference_pos += 2;\n\n                return construct;\n            }\n        }\n    }\n};\n\nexports.statement = statement;\n\nvar function_def = function(token_list) {\n    var tok = token_list[0];\n\n    if (tok.type !== token.type.variable) return false;\n\n    var first_paren, last_paren;\n\n    if (token_list.length <= 3) return false;\n\n    tok = token_list[1];\n\n    if (tok.value !== '(') return false;\n\n    first_paren = 1;\n\n    for (var i = 0; i < token_list.length; i++) {\n        if (token_list[i].value === ')') {\n            last_paren = i;\n            break;\n        }\n    }\n\n    if (last_paren === undefined) return false;\n\n    var tmp_construct = {reference_pos: first_paren + 1};\n    while(tmp_construct.reference_pos < last_paren) {\n        tmp_construct = var_list(token_list.slice(tmp_construct.reference_pos, last_paren));\n        if (!tmp_construct) return false;\n        tmp_construct.reference_pos += first_paren + 1;\n    }\n\n    if (last_paren + 1 >= token_list.length || token_list[last_paren + 1].value !== '=') return false;\n\n    var definition = statement(token_list.slice(last_paren + 2, token_list.length));\n    var construct = make_construct(constructs.function_def, token_list.slice(0, last_paren + 1), definition.reference_pos + last_paren + 2);\n    construct.definition = definition;\n\n    return construct;\n};\n\nexports.function_def = function_def;\n\nvar function_call = function(token_list) {\n    var tok = token_list[0];\n\n    if (token_list.length < 3) return false;\n    if (tok.type !== token.type.variable) return false;\n\n    var first_paren, last_paren;\n\n    tok = token_list[1];\n\n    if (tok.value !== '(') return false;\n\n    first_paren = 1;\n\n    var open_parens = 1;\n    for (var i = first_paren + 1; i < token_list.length; i++) {\n        if (token_list[i].value === '(') {\n            open_parens += 1;\n        }\n\n        if (token_list[i].value === ')') {\n            open_parens -= 1;\n        }\n\n        if (open_parens === 0) {\n            last_paren = i;\n            break;\n        }\n    }\n\n    if (last_paren === undefined) return false;\n\n    var stmt_list = statement_list(token_list.slice(first_paren + 1, last_paren));\n    if (!statement_list(token_list.slice(first_paren + 1, last_paren))) return false;\n\n    if (last_paren < token_list.length - 1 && token_list[last_paren + 1].value === '=') return false;\n\n    return make_construct(constructs.function_call, [token_list[0], stmt_list], last_paren + 1);\n};\n\nexports.function_call = function_call;\n\nexports.classify = function(token_list) {\n    var i = 0;\n    var classification = [];\n\n    while(i < token_list.length) {\n        var c;\n        var sub_list = token_list.slice(i);\n\n        c = function_def(sub_list);\n        if (!c) {\n            c = statement(sub_list);\n        }\n\n        if (!c) {\n            c = {reference_pos: 1};\n        } else {\n            classification.push(c);\n        }\n\n        i = i + c.reference_pos;\n\n        if (i < token_list.length && token_list[i].type == token.type.newline) i++;\n    }\n\n    return classification;\n};\n","map":{"mappings":[{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/plot.js/lib/interpreter/grammar.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}}],"sources":{"node_modules/plot.js/lib/interpreter/grammar.js":"// grammar.js will take a list of tokens, and classify it as one of the\n// possible plot.js language constructs\n\nvar token = require('../../lib/interpreter/token');\n\n// Array Remove - By John Resig (MIT Licensed)\nArray.prototype.remove = function(from, to) {\n  var rest = this.slice((to || from) + 1 || this.length);\n  this.length = from < 0 ? this.length + from : from;\n  return this.push.apply(this, rest);\n};\n\nvar constructs = {\n    var_list: 100,\n    statement_list: 101,\n    statement: 102,\n    function_def: 103,\n    function_call: 104,\n};\n\nvar make_construct = function(type, tokens, pos) {\n    return {type: type, tokens: tokens, reference_pos: pos};\n};\n\nexports.type = constructs;\n\nvar var_list = function(token_list) {\n    for (var i = 0; i < token_list.length; i++) {\n        var tok = token_list[i];\n\n        if (i % 2 === 0) {\n            if (tok.type !== token.type.numeric &&\n                tok.type !== token.type.variable) {\n                if (i === 0) return false;\n                return make_construct(constructs.var_list, token_list.slice(0, i), i);\n            }\n        } else {\n            if (tok.type !== token.type.unaryOp ||\n                tok.value !== ',') {\n                if (i === 0) return false;\n                return make_construct(constructs.var_list, token_list.slice(0, i), i);\n            }\n        }\n    }\n\n    return make_construct(constructs.var_list, token_list, i);\n};\n\nexports.var_list = var_list;\n\nvar statement_list = function(token_list) {\n    var last_comma = 0;\n    var stmt_list = [];\n    for (var i = 0; i < token_list.length; i++) {\n        var tok = token_list[i];\n\n        if (tok.value === ',') {\n            var construct = statement(token_list.slice(last_comma, i));\n            if (!construct) return false;\n            last_comma = i + 1;\n            stmt_list.push(construct);\n        }\n    }\n\n    var stmt = statement(token_list.slice(last_comma, token_list.length));\n    if (!stmt) return false;\n    stmt_list.push(stmt);\n\n    return make_construct(constructs.statement_list, stmt_list, token_list.length);\n};\n\nexports.statement_list = statement_list;\n\nvar statement = function(token_list) {\n    if (token_list.length === 0) return make_construct(constructs.statement, [token.type.nil], 0);\n\n    if (token_list.length === 1) {\n        if (token_list[0].type === token.type.variable ||\n            token_list[0].type === token.type.numeric) {\n            return make_construct(constructs.statement, token_list, token_list.length + 1);\n        }\n    } else {\n        var construct = function_call(token_list);\n        var operator, left_hand, right_hand;\n\n        if (construct) {\n            operator = token_list[construct.reference_pos];\n            right_hand = token_list.slice(construct.reference_pos + 1);\n\n            if (operator === undefined || operator.type !== token.type.unaryOp) {\n                return make_construct(constructs.statement, [construct], construct.reference_pos);\n            } else if (right_hand === undefined) {\n                return false;\n            } else {\n                var stmt = statement(right_hand);\n\n                if (!stmt) return false;\n\n                stmt.tokens.unshift(operator);\n                stmt.tokens.unshift(construct);\n                stmt.reference_pos += construct.reference_pos + 1;\n\n                return stmt;\n            }\n        } else {\n            left_hand = token_list[0];\n            operator = token_list[1];\n            right_hand = token_list.slice(2);\n\n            if (left_hand.value === '(' ||\n                operator.value === ')') {\n                right_hand.unshift(operator);\n\n                construct = statement(right_hand);\n\n                if (!construct) return false;\n\n                construct.tokens.unshift(left_hand);\n                construct.reference_pos += 1;\n\n                return construct;\n            } else if (operator.type !== token.type.unaryOp &&\n                operator.type !== token.type.binaryOp) {\n\n                return make_construct(constructs.statement, [left_hand], 1);\n            } else if (operator.value === ',' && right_hand[0].type === token.type.newline) {\n                var nl = right_hand[0];\n                right_hand.remove(0);\n\n                construct = statement(right_hand);\n\n                construct.tokens.unshift(nl);\n                construct.tokens.unshift(left_hand);\n                construct.reference_pos += 3;\n\n                return construct;\n            } else if (right_hand === undefined) {\n                return false;\n            } else {\n                construct = statement(right_hand);\n\n                if (!construct) return false;\n\n                construct.tokens.unshift(operator);\n                construct.tokens.unshift(left_hand);\n                construct.reference_pos += 2;\n\n                return construct;\n            }\n        }\n    }\n};\n\nexports.statement = statement;\n\nvar function_def = function(token_list) {\n    var tok = token_list[0];\n\n    if (tok.type !== token.type.variable) return false;\n\n    var first_paren, last_paren;\n\n    if (token_list.length <= 3) return false;\n\n    tok = token_list[1];\n\n    if (tok.value !== '(') return false;\n\n    first_paren = 1;\n\n    for (var i = 0; i < token_list.length; i++) {\n        if (token_list[i].value === ')') {\n            last_paren = i;\n            break;\n        }\n    }\n\n    if (last_paren === undefined) return false;\n\n    var tmp_construct = {reference_pos: first_paren + 1};\n    while(tmp_construct.reference_pos < last_paren) {\n        tmp_construct = var_list(token_list.slice(tmp_construct.reference_pos, last_paren));\n        if (!tmp_construct) return false;\n        tmp_construct.reference_pos += first_paren + 1;\n    }\n\n    if (last_paren + 1 >= token_list.length || token_list[last_paren + 1].value !== '=') return false;\n\n    var definition = statement(token_list.slice(last_paren + 2, token_list.length));\n    var construct = make_construct(constructs.function_def, token_list.slice(0, last_paren + 1), definition.reference_pos + last_paren + 2);\n    construct.definition = definition;\n\n    return construct;\n};\n\nexports.function_def = function_def;\n\nvar function_call = function(token_list) {\n    var tok = token_list[0];\n\n    if (token_list.length < 3) return false;\n    if (tok.type !== token.type.variable) return false;\n\n    var first_paren, last_paren;\n\n    tok = token_list[1];\n\n    if (tok.value !== '(') return false;\n\n    first_paren = 1;\n\n    var open_parens = 1;\n    for (var i = first_paren + 1; i < token_list.length; i++) {\n        if (token_list[i].value === '(') {\n            open_parens += 1;\n        }\n\n        if (token_list[i].value === ')') {\n            open_parens -= 1;\n        }\n\n        if (open_parens === 0) {\n            last_paren = i;\n            break;\n        }\n    }\n\n    if (last_paren === undefined) return false;\n\n    var stmt_list = statement_list(token_list.slice(first_paren + 1, last_paren));\n    if (!statement_list(token_list.slice(first_paren + 1, last_paren))) return false;\n\n    if (last_paren < token_list.length - 1 && token_list[last_paren + 1].value === '=') return false;\n\n    return make_construct(constructs.function_call, [token_list[0], stmt_list], last_paren + 1);\n};\n\nexports.function_call = function_call;\n\nexports.classify = function(token_list) {\n    var i = 0;\n    var classification = [];\n\n    while(i < token_list.length) {\n        var c;\n        var sub_list = token_list.slice(i);\n\n        c = function_def(sub_list);\n        if (!c) {\n            c = statement(sub_list);\n        }\n\n        if (!c) {\n            c = {reference_pos: 1};\n        } else {\n            classification.push(c);\n        }\n\n        i = i + c.reference_pos;\n\n        if (i < token_list.length && token_list[i].type == token.type.newline) i++;\n    }\n\n    return classification;\n};\n"},"lineCount":266}},"hash":"21c3e5025008d4989c5be812e4eeedea","cacheData":{"env":{}}}