{"dependencies":[{"name":"/Users/markus/Documents/Coding/mathplotting/package.json","includedInParent":true,"mtime":1523958355000},{"name":"/Users/markus/Documents/Coding/mathplotting/node_modules/plot.js/package.json","includedInParent":true,"mtime":1523958354000},{"name":"../../lib/interpreter/token","loc":{"line":1,"column":20}},{"name":"../../lib/interpreter/builtin","loc":{"line":2,"column":22}},{"name":"../../lib/drawing/canvas","loc":{"line":3,"column":21}},{"name":"../../lib/drawing/svg","loc":{"line":4,"column":18}}],"generated":{"js":"var token = require('../../lib/interpreter/token');\nvar builtin = require('../../lib/interpreter/builtin');\nvar Canvas = require('../../lib/drawing/canvas');\nvar SVG = require('../../lib/drawing/svg');\n\nvar canvas = new Canvas();\n\nmodule.exports.setCanvas = function(c) {\n    canvas = c;\n};\n\n// Graph a function over the X-axis\n//\n// Returns an SVG\nvar plot_x = function(f, min, max, parser) {\n    var svg = new SVG(canvas.width, canvas.height);\n    var function_prototype = parser.fnLookup[f];\n    var upper_bound = max;\n\n    canvas.graph.setBoundsX(min, max);\n\n    var step_size = canvas.graph.sizeX() / canvas.width;\n\n    for (var i = min; i < upper_bound; i += step_size) {\n        var y = parser.callFunction(f, [{type: token.type.numeric, value: i}], parser.varTable);\n\n        canvas.addPoint(i, y.value);\n    }\n\n    var axes = canvas.axes();\n    svg.addAxes(axes[0], axes[1]);\n    svg.addPolyline(canvas.convertPointsToSVGPolyline());\n\n    return svg.render();\n};\n\nbuiltin.addFunction('plot_x', ['f', 'min', 'max'], plot_x);\n\nvar plot_y = function(f, min, max, parser) {\n    var svg = new SVG(canvas.width, canvas.height);\n    var function_prototype = parser.fnLookup[f];\n    var upper_bound = max;\n\n    canvas.graph.setBoundsY(min, max);\n\n    var step_size = canvas.graph.sizeY() / canvas.width;\n\n    for (var i = min; i < upper_bound; i += step_size) {\n        var x = parser.callFunction(f, [{type: token.type.numeric, value: i}], parser.varTable);\n\n        canvas.addPoint(x.value, i);\n    }\n\n    var axes = canvas.axes();\n    svg.addAxes(axes[0], axes[1]);\n    svg.addPolyline(canvas.convertPointsToSVGPolyline());\n\n    return svg.render();\n};\n\nbuiltin.addFunction('plot_y', ['f', 'min', 'max'], plot_y);\n\nvar canvas_size = function(width, height) {\n    canvas.width = width;\n    canvas.height = height;\n};\n\nbuiltin.addFunction('canvas_size', ['width', 'height'], canvas_size);\n","map":{"mappings":[{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/plot.js/lib/drawing/api.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}}],"sources":{"node_modules/plot.js/lib/drawing/api.js":"var token = require('../../lib/interpreter/token');\nvar builtin = require('../../lib/interpreter/builtin');\nvar Canvas = require('../../lib/drawing/canvas');\nvar SVG = require('../../lib/drawing/svg');\n\nvar canvas = new Canvas();\n\nmodule.exports.setCanvas = function(c) {\n    canvas = c;\n};\n\n// Graph a function over the X-axis\n//\n// Returns an SVG\nvar plot_x = function(f, min, max, parser) {\n    var svg = new SVG(canvas.width, canvas.height);\n    var function_prototype = parser.fnLookup[f];\n    var upper_bound = max;\n\n    canvas.graph.setBoundsX(min, max);\n\n    var step_size = canvas.graph.sizeX() / canvas.width;\n\n    for (var i = min; i < upper_bound; i += step_size) {\n        var y = parser.callFunction(f, [{type: token.type.numeric, value: i}], parser.varTable);\n\n        canvas.addPoint(i, y.value);\n    }\n\n    var axes = canvas.axes();\n    svg.addAxes(axes[0], axes[1]);\n    svg.addPolyline(canvas.convertPointsToSVGPolyline());\n\n    return svg.render();\n};\n\nbuiltin.addFunction('plot_x', ['f', 'min', 'max'], plot_x);\n\nvar plot_y = function(f, min, max, parser) {\n    var svg = new SVG(canvas.width, canvas.height);\n    var function_prototype = parser.fnLookup[f];\n    var upper_bound = max;\n\n    canvas.graph.setBoundsY(min, max);\n\n    var step_size = canvas.graph.sizeY() / canvas.width;\n\n    for (var i = min; i < upper_bound; i += step_size) {\n        var x = parser.callFunction(f, [{type: token.type.numeric, value: i}], parser.varTable);\n\n        canvas.addPoint(x.value, i);\n    }\n\n    var axes = canvas.axes();\n    svg.addAxes(axes[0], axes[1]);\n    svg.addPolyline(canvas.convertPointsToSVGPolyline());\n\n    return svg.render();\n};\n\nbuiltin.addFunction('plot_y', ['f', 'min', 'max'], plot_y);\n\nvar canvas_size = function(width, height) {\n    canvas.width = width;\n    canvas.height = height;\n};\n\nbuiltin.addFunction('canvas_size', ['width', 'height'], canvas_size);\n"},"lineCount":69}},"hash":"05acc79e000989029cf63613c9cd41da","cacheData":{"env":{}}}