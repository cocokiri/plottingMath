{"dependencies":[{"name":"./index.js","dynamic":true},{"name":"./style.css","dynamic":true}],"generated":{"html":"<!doctype html>\n<html lang=\"en\">\n<head>\n\t<!--<script src=\"math.js\"></script> -->\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>Document</title>\n</head>\n<style>\n    #flexer{\n        display:flex;\n        flex-direction: column;\n    }\n</style>\n<body>\n\n<div id=\"flexer\">\n\n    <div>YADL DIII</div>\n    <div id=\"plot\"></div>\n</div>\n</body>\n<script src=\"/mathplotting.46a51c86.js\"></script>\n<link rel=\"stylesheet\" href=\"/style.48dd3a6c.css\">\n\n\n<input type=\"textarea\" name=\"textfield\" id=\"input-textfield\">\n<button type=\"button\" id=\"evaluate-button\">Symbolicate</button>\n<br>\n<p id=\"output-text\"></p>\n\n<script>\n    import math from \"math.js\"\nvar button = document.getElementById('evaluate-button');\n\nbutton.addEventListener('click', function(e) {\n\tvar inputValue = document.getElementById('input-textfield').value;\n\tvar node = math.parse(inputValue);\n\t\n\t// this is the tree of the equation\n\tnode.traverse(function (node, path, parent) {\n\t\tvar nodeValue = \"\";\n\t\tif (node.type == 'OperatorNode') {\n\t\t\tnodeValue = node.op;\n\t\t} else if (node.type == 'ConstantNode') {\n\t\t\tnodeValue = node.value;\n\t\t} else if (node.type == 'SymbolNode') {\n\t\t\tnodeValue = node.name;\n\t\t} else if (node.type == 'FunctionNode') {\n\t\t\tnodeValue = node.fn;\n\t\t}\n\t\t\n\t\tvar newParagraoh = document.createElement(\"P\");                       // Create a <p> element\n\t\tvar textNode = document.createTextNode(\"[\" + node.type + \": \" + nodeValue + \"]\"); \n\t\tnewParagraoh.appendChild(textNode);    \n\t \tdocument.getElementById('output-text').appendChild(newParagraoh);\n\n\t  // switch (node.type) {\n\t  //   case 'OperatorNode': console.log(node.type, node.op);    break;\n\t  //   case 'ConstantNode': console.log(node.type, node.value); break;\n\t  //   case 'SymbolNode':   console.log(node.type, node.name);  break;\n\t  //   default:             console.log(node.type);\n\t  // }\n\t});\n});\n</script>\n\n</html>"},"hash":"edc36bdd1c6b93797dbc5d7354adb6ee","cacheData":{}}